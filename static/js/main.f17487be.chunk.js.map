{"version":3,"sources":["Components/Header.js","Components/List.js","App.js","index.js"],"names":["Header","props","react_default","a","createElement","className","onClick","copleteAll","placeholder","autoFocus","onKeyDown","e","keyCode","addToList","target","value","List","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","viewList","item","_this2","id","type","htmlFor","todoList","filter","map","chacked","checked","changeStateItem","name","deleteItem","reduce","accum","href","setState","clearCompleted","React","Component","App","prev","key","itemName","Date","now","concat","toConsumableArray","stateAllItem","prevItem","Components_Header","Components_List","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.f17487be.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\n\r\nfunction Header(props){\r\n    return(\r\n        <header className=\"header\">\r\n            <h1>todos</h1>\r\n            <div className=\"arrow\" onClick={props.copleteAll}></div>\r\n            <input\r\n                className=\"new-todo\"\r\n                placeholder=\"What needs to be done?\"\r\n                autoFocus\r\n                onKeyDown={(e) => {\r\n                       if (e.keyCode === 13){\r\n                           props.addToList(e.target.value);\r\n                           e.target.value = null;\r\n                       }\r\n                   }\r\n                   }\r\n            />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\n\r\nclass List extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state ={\r\n            viewList: (item) => {\r\n                return item\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n    return(\r\n        <section className=\"main\">\r\n            <input id=\"toggle-all\" className=\"toggle-all\" type=\"checkbox\" />\r\n            <label htmlFor=\"toggle-all\">Mark all as complete</label>\r\n            <ul className=\"todo-list\">\r\n                {\r\n\r\n                    this.props.todoList.filter(this.state.viewList).map((item) => {\r\n                    return (\r\n                        <li className={item.chacked? \"completed\" : ''} >\r\n                            <div className=\"view\">\r\n                                <input\r\n                                    className=\"toggle\"\r\n                                    type=\"checkbox\"\r\n                                    checked={item.chacked} onClick={() => {\r\n                                        this.props.changeStateItem(item);\r\n\r\n                                    }}\r\n                                />\r\n\r\n                                <label>{item.name}</label>\r\n\r\n                                <button className=\"destroy\" onClick={() => {\r\n                                    this.props.deleteItem(item)\r\n                                }}>\r\n                                </button>\r\n\r\n                            </div>\r\n                        </li>\r\n                        )}\r\n                    )}\r\n            </ul>\r\n            <footer className=\"footer\">\r\n                <span className=\"todo-count\">\r\n                    {\r\n                        this.props.todoList.reduce((accum, item ) => {\r\n                            if(!item.chacked)\r\n                                return accum + 1;\r\n                            else return accum\r\n                        },0\r\n                    )} items left\r\n                </span>\r\n                <ul className=\"filters\">\r\n                    <li>\r\n                        <a href=\"#/\" className=\"selected\" onClick={() => {\r\n                            this.setState({\r\n                                viewList: (item) => {return item}\r\n                            })\r\n                        }}>All</a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"#/active\" onClick={() => {\r\n                            this.setState({\r\n                                viewList: (item) => {return !item.chacked}\r\n                            })\r\n                        }}>Active</a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"#/completed\" onClick={() => {\r\n                            this.setState({\r\n                                viewList: (item) => {return item.chacked}\r\n                            })\r\n                        }}>Completed</a>\r\n                    </li>\r\n                </ul>\r\n                <button className=\"clear-completed\" onClick={this.props.clearCompleted}>Clear completed</button>\r\n            </footer>\r\n        </section>\r\n\r\n    )\r\n}}\r\n\r\n\r\nexport default List;","import React from 'react';\nimport './App.css';\nimport Header from './Components/Header';\nimport List from './Components/List';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n             todoList: [],\n\n        };\n\n\n\n        this.deleteItem = (deleteItem)=> {\n                this.setState(prev => {\n\n                    return{todoList: prev.todoList.filter((item) => {\n                            return item.key !== deleteItem.key;\n                        }\n                    )}\n                })\n            };\n\n            this.addToList = (itemName) => {\n                const item = {\n                    name: itemName,\n                    chacked: false,\n                    key: Date.now()\n                };\n\n                this.setState(function(prev) {\n                    return{ todoList : [...prev.todoList, item]}\n                }\n                )\n        };\n\n        this.copleteAll = () => {\n            this.setState({\n                stateAllItem: !this.state.stateAllItem\n            });\n\n            this.setState(function(prev) {\n                return{ todoList : prev.todoList.map(item => {\n                        return{\n                            name: item.name,\n                            chacked: !this.state.stateAllItem,\n                            key: item.key\n                        }\n\n                    })}\n            })\n        };\n\n        this.changeStateItem = (item) => {\n                this.setState(function (prev) {\n\n                        return{ todoList: prev.todoList.map((prevItem) => {\n\n                            if(item.key === prevItem.key){\n                                return{\n                                    name: item.name,\n                                    chacked: !item.chacked,\n                                    key: item.key\n                                }\n                            }\n                            else\n                                return prevItem;\n                        })}\n\n\n                    })\n        };\n\n        this.clearCompleted = () => {\n            this.setState(function(prev) {\n                return{ todoList : prev.todoList.filter(item => {\n                        return  !item.chacked;\n                    })}\n            })\n        }\n\n\n        }\n\n\n\n\n    render() {\n        return (\n            <div className=\"App\">\n\n                <section className=\"todoapp\">\n                    <Header\n                        addToList = {this.addToList}\n                        copleteAll = {this.copleteAll}\n                    />\n                    <List\n                        todoList = {this.state.todoList}\n                        clearCompleted = {this.clearCompleted}\n                        changeStateItem = {this.changeStateItem}\n                        deleteItem = {this.deleteItem}\n                    />\n                </section>\n\n                <footer className=\"info\">\n                    <p>Double-click to edit a todo</p>\n                    <p>Created by <a href=\"http://twitter.com/oscargodson\">Oscar Godson</a></p>\n                    <p>Refactored by <a href=\"https://github.com/cburgmer\">Christoph Burgmer</a></p>\n                    <p>Part of <a href=\"http://todomvc.com\">TodoMVC</a></p>\n                </footer>\n\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}